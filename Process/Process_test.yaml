Option:
  name_experiment: Test
  setup: # Paths to the config file of the pre-calibrated camera's setup
    path: Setup_Camera/Setup_Camera_night.yaml
  dataset:
    number_of_sample: 10
    shuffle: False
  monocular_depth_network:
    name: depthanything
  depth_network:
    name: unimatch
  disparity_network:
    name: unimatch


monocular_IR:
  monocular:
    cameras: [IR]
    option: []
  wrap:
    cameras: [ IR, RGB ]
    method: disp
    option: [return_depth_reg, return_occlusion, []]
  valid: [ IR, RGB ]
  save: [pred_depth, image_reg, depth_reg, occlusion]



Disparity-Depth:
  disparity:
    cameras: [ IR, IR2 ]
    option: [ ]
  wrap:
    cameras: [ IR, RGB ]
    method: depth
    option: [ return_depth_reg, return_occlusion, [ ] ]
  valid: [ IR, RGB ]
  save: [ pred_depth, image_reg, depth_reg, occlusion ]



#Depth-Disparity:
#  depth:
#    cameras: [RGB, RGB2]
#    option: []
#  wrap:
#    cameras: [IR, RGB]
#    method: disparity
#    option: [return_depth_reg, return_occlusion, []]
#  valid: [IR, RGB]
#  save: [pred_depth, image_reg, depth_reg, occlusion]
#

#Disparity-Depth:
#  disparity:
#    cameras: [RGB, RGB2]
#    option: [inference_size: [480, 640]]
#  wrap:
#    cameras: [IR, RGB]
#    method: depth
#    option: [return_depth_reg, return_occlusion, []]
#  valid: [IR, RGB]
#  save: [pred_disp, image_reg, disp_reg, occlusion]
#

#Disparity-Disparity:
#  disparity:
#    cameras: [RGB, RGB2]
#    option: [inference_size: [480, 640]]
#  wrap:
#    cameras: [IR, RGB]
#    method: disparity
#    option: [return_depth_reg, return_occlusion, []]
#  valid: [IR, RGB]
#  save: [pred_disp, image_reg, disp_reg, occlusion]
