
Option:
  name_experiment: methods_comparison
  setup: # Paths to the config file of the pre-calibrated camera's setup
    path: Setup_Camera.yaml
  dataset:
    number_of_sample: 1/10
    shuffle: False
  depth_network:
    name: unimatch
  disparity_network:
    name: unimatch


Depth-Depth:
  depth:
    cameras: [RGB, RGB2]
    option: []
  wrap:
    cameras: [IR, RGB]
    method: depth
    source: pred_depth
    option: [return_depth_reg, return_occlusion, []]
  valid: [IR, RGB]
  save: [pred_depth, image_reg, depth_reg, occlusion]

Depth-Disparity:
  depth:
    cameras: [RGB, RGB2]
    option: []
  wrap:
    cameras: [IR, RGB]
    method: disparity
    source: pred_depth
    option: [return_depth_reg, return_occlusion, []]
  valid: [IR, RGB]
  save: [pred_depth, image_reg, depth_reg, occlusion]

Disparity-Disparity:
  disparity:
    cameras: [RGB, RGB2]
    option: []
  wrap:
    cameras: [IR, RGB]
    method: disparity
    source: pred_disp
    option: [return_depth_reg, return_occlusion, []]
  valid: [IR, RGB]
  save: [pred_disp, image_reg, disp_reg, occlusion]

Disparity-Depth:
  disparity:
    cameras: [RGB, RGB2]
    option: []
  wrap:
    cameras: [IR, RGB]
    method: depth
    source: pred_disp
    option: [return_depth_reg, return_occlusion, []]
  valid: [IR, RGB]
  save: [pred_disp, image_reg, disp_reg, occlusion]

monocular-Depth:
  monocular:
    cameras: [ RGB ]
    option: [ inference_size: [ 480, 640 ] ]
  wrap:
    cameras: [ IR, RGB ]
    method: depth
    source: pred_depth
    option: [ return_depth_reg, return_occlusion, [ ] ]
  valid: [ IR, RGB ]
  save: [ pred_depth, image_reg, depth_reg, occlusion ]

monocular-Disparity:
  monocular:
    cameras: [ RGB ]
    option: [ inference_size: [ 480, 640 ] ]
  wrap:
    cameras: [ IR, RGB ]
    method: disparity
    source: pred_depth
    option: [ return_depth_reg, return_occlusion, [ ] ]
  valid: [ IR, RGB ]
  save: [ pred_depth, image_reg, depth_reg, occlusion ]